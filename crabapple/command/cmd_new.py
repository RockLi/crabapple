# Copyright 2014 The crabapple Authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.


import getopt
import os
import datetime
from crabapple.exception import InvalidArgsException


help_msg = '''crabapple new --name project_name

'''

template = '''# generated by crabapple at {0}

# version of this spec file
syntax_version = {1}

# The name of your project
name = '{2}'

# Repo URL of Github, Bitbucket...
repo_url = 'http://github.com/{2}/{2}'

# Repo Address
repo_git_url = 'git@github.com:{2}/{2}.git'

# Local Copy of your folder, codes will be updated here
local_folder = '/home/wwwuser/code/{2}'

# Timeout for one deployment, 0 means no limitation
timeout = 0

# Called when we try to start your application
def _on_application_start():
    print 'my application started'

on_application_start = _on_application_start


# Called when we try to stop your application
def _on_application_stop():
    print 'my application stopped'

on_application_stop = _on_application_stop


# Called when we try to update
def _on_update():
    #shell.run('git pull origin master')
    print 'codes updated'

on_update = _on_update


# Called when we try to run the testing
def _on_test():
    print 'run my tests'

on_test = _on_test
'''


def work(args):
    try:
        opts, args = getopt.getopt(args, 'n:t:', ['name=', 'type='])
    except getopt.GetoptError:
        raise InvalidArgsException()

    name = None
    template_type = None
    for o, a in opts:
        if o in ('-n', '--name'):
            name = a
        elif o in ('-t', '--type'):
            template_type = a

    if name is None:
        raise InvalidArgsException()

    os.makedirs('./%s' % (name))

    with open('./%s/spec' % (name), 'w') as f:
        f.write(template.format(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S'),
                                '1.0',
                                name))
